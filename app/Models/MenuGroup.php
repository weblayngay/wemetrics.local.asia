<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;
use Illuminate\Database\Eloquent\Relations\HasMany;

class MenuGroup extends BaseModel
{
    use HasFactory;

    protected $table = MENU_GROUP_TBL;
    protected $primaryKey = 'menugroup_id';

    const CREATED_AT = 'menugroup_created_at';
    const UPDATED_AT = 'menugroup_updated_at';

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'menugroup_name',
        'menugroup_code',
        'menugroup_description',
        'menugroup_status',
        'menugroup_is_delete',
        'menugroup_created_at',
        'menugroup_updated_at',
        'menugroup_created_by',
        'menugroup_updated_by',
        'menugroup_deleted_by',
    ];

    const ALIAS = [
        'menugroup_name'                => 'name',
        'menugroup_code'                => 'code',
        'menugroup_description'         => 'description',
        'menugroup_status'              => 'status',
        'menugroup_is_delete'           => 'isDelete',
        'menugroup_created_at'          => 'createdAt',
        'menugroup_updated_at'          => 'updateAt',
        'menugroup_created_by'          => 'createdBy',
        'menugroup_updated_by'          => 'updatedBy',
        'menugroup_deleted_by'          => 'deletedBy',

    ];

    /**
     * @return Builder
     */
    public static function parentQuery(): Builder
    {
        return parent::query(); // TODO: Change the autogenerated stub
    }

    /**
     * @return \Illuminate\Database\Eloquent\Builder
     */
    static function query($isDeleted = true)
    {
        if($isDeleted == true)
        {
            return parent::query()->notDeleted();
        } else {
            return parent::query();
        }
        
    }

    /**
     * @param $query
     * @return mixed
     */
    public function scopeNotDeleted($query)
    {
        return $query->where('menugroup_is_delete', 'no');
    }

    /**
     * @param $query
     * @return mixed
     */
    public function scopeIsActivated($query)
    {
        return $query->where('menugroup_status', 'activated');
    }

    /**
     * @return HasMany
     */
    public function menus(): HasMany
    {
        return parent::hasOne('App\Models\Menu', 'menu_group', 'menugroup_id');
    }
}
